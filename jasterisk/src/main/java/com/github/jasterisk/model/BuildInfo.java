/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.jasterisk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Info about how Asterisk was built
 */
@ApiModel(description = "Info about how Asterisk was built")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-12-07T21:43:27.583+02:00")
public class BuildInfo {
  @SerializedName("os")
  private String os = null;

  @SerializedName("kernel")
  private String kernel = null;

  @SerializedName("options")
  private String options = null;

  @SerializedName("machine")
  private String machine = null;

  @SerializedName("date")
  private String date = null;

  @SerializedName("user")
  private String user = null;

  public BuildInfo os(String os) {
    this.os = os;
    return this;
  }

   /**
   * OS Asterisk was built on.
   * @return os
  **/
  @ApiModelProperty(required = true, value = "OS Asterisk was built on.")
  public String getOs() {
    return os;
  }

  public void setOs(String os) {
    this.os = os;
  }

  public BuildInfo kernel(String kernel) {
    this.kernel = kernel;
    return this;
  }

   /**
   * Kernel version Asterisk was built on.
   * @return kernel
  **/
  @ApiModelProperty(required = true, value = "Kernel version Asterisk was built on.")
  public String getKernel() {
    return kernel;
  }

  public void setKernel(String kernel) {
    this.kernel = kernel;
  }

  public BuildInfo options(String options) {
    this.options = options;
    return this;
  }

   /**
   * Compile time options, or empty string if default.
   * @return options
  **/
  @ApiModelProperty(required = true, value = "Compile time options, or empty string if default.")
  public String getOptions() {
    return options;
  }

  public void setOptions(String options) {
    this.options = options;
  }

  public BuildInfo machine(String machine) {
    this.machine = machine;
    return this;
  }

   /**
   * Machine architecture (x86_64, i686, ppc, etc.)
   * @return machine
  **/
  @ApiModelProperty(required = true, value = "Machine architecture (x86_64, i686, ppc, etc.)")
  public String getMachine() {
    return machine;
  }

  public void setMachine(String machine) {
    this.machine = machine;
  }

  public BuildInfo date(String date) {
    this.date = date;
    return this;
  }

   /**
   * Date and time when Asterisk was built.
   * @return date
  **/
  @ApiModelProperty(required = true, value = "Date and time when Asterisk was built.")
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }

  public BuildInfo user(String user) {
    this.user = user;
    return this;
  }

   /**
   * Username that build Asterisk
   * @return user
  **/
  @ApiModelProperty(required = true, value = "Username that build Asterisk")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuildInfo buildInfo = (BuildInfo) o;
    return Objects.equals(this.os, buildInfo.os) &&
        Objects.equals(this.kernel, buildInfo.kernel) &&
        Objects.equals(this.options, buildInfo.options) &&
        Objects.equals(this.machine, buildInfo.machine) &&
        Objects.equals(this.date, buildInfo.date) &&
        Objects.equals(this.user, buildInfo.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(os, kernel, options, machine, date, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuildInfo {\n");
    
    sb.append("    os: ").append(toIndentedString(os)).append("\n");
    sb.append("    kernel: ").append(toIndentedString(kernel)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    machine: ").append(toIndentedString(machine)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

