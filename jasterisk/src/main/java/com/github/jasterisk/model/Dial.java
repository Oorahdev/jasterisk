/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.jasterisk.model;

import java.util.Objects;
import com.github.jasterisk.model.Channel;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Dialing state has changed.
 */
@ApiModel(description = "Dialing state has changed.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-12-02T16:24:17.590+02:00")
public class Dial {
  @SerializedName("caller")
  private Channel caller = null;

  @SerializedName("peer")
  private Channel peer = null;

  @SerializedName("forward")
  private String forward = null;

  @SerializedName("forwarded")
  private Channel forwarded = null;

  @SerializedName("dialstring")
  private String dialstring = null;

  @SerializedName("dialstatus")
  private String dialstatus = null;

  public Dial caller(Channel caller) {
    this.caller = caller;
    return this;
  }

   /**
   * The calling channel.
   * @return caller
  **/
  @ApiModelProperty(value = "The calling channel.")
  public Channel getCaller() {
    return caller;
  }

  public void setCaller(Channel caller) {
    this.caller = caller;
  }

  public Dial peer(Channel peer) {
    this.peer = peer;
    return this;
  }

   /**
   * The dialed channel.
   * @return peer
  **/
  @ApiModelProperty(required = true, value = "The dialed channel.")
  public Channel getPeer() {
    return peer;
  }

  public void setPeer(Channel peer) {
    this.peer = peer;
  }

  public Dial forward(String forward) {
    this.forward = forward;
    return this;
  }

   /**
   * Forwarding target requested by the original dialed channel.
   * @return forward
  **/
  @ApiModelProperty(value = "Forwarding target requested by the original dialed channel.")
  public String getForward() {
    return forward;
  }

  public void setForward(String forward) {
    this.forward = forward;
  }

  public Dial forwarded(Channel forwarded) {
    this.forwarded = forwarded;
    return this;
  }

   /**
   * Channel that the caller has been forwarded to.
   * @return forwarded
  **/
  @ApiModelProperty(value = "Channel that the caller has been forwarded to.")
  public Channel getForwarded() {
    return forwarded;
  }

  public void setForwarded(Channel forwarded) {
    this.forwarded = forwarded;
  }

  public Dial dialstring(String dialstring) {
    this.dialstring = dialstring;
    return this;
  }

   /**
   * The dial string for calling the peer channel.
   * @return dialstring
  **/
  @ApiModelProperty(value = "The dial string for calling the peer channel.")
  public String getDialstring() {
    return dialstring;
  }

  public void setDialstring(String dialstring) {
    this.dialstring = dialstring;
  }

  public Dial dialstatus(String dialstatus) {
    this.dialstatus = dialstatus;
    return this;
  }

   /**
   * Current status of the dialing attempt to the peer.
   * @return dialstatus
  **/
  @ApiModelProperty(required = true, value = "Current status of the dialing attempt to the peer.")
  public String getDialstatus() {
    return dialstatus;
  }

  public void setDialstatus(String dialstatus) {
    this.dialstatus = dialstatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dial dial = (Dial) o;
    return Objects.equals(this.caller, dial.caller) &&
        Objects.equals(this.peer, dial.peer) &&
        Objects.equals(this.forward, dial.forward) &&
        Objects.equals(this.forwarded, dial.forwarded) &&
        Objects.equals(this.dialstring, dial.dialstring) &&
        Objects.equals(this.dialstatus, dial.dialstatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caller, peer, forward, forwarded, dialstring, dialstatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dial {\n");
    
    sb.append("    caller: ").append(toIndentedString(caller)).append("\n");
    sb.append("    peer: ").append(toIndentedString(peer)).append("\n");
    sb.append("    forward: ").append(toIndentedString(forward)).append("\n");
    sb.append("    forwarded: ").append(toIndentedString(forwarded)).append("\n");
    sb.append("    dialstring: ").append(toIndentedString(dialstring)).append("\n");
    sb.append("    dialstatus: ").append(toIndentedString(dialstatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

