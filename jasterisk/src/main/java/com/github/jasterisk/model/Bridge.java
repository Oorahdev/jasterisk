/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.jasterisk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The merging of media from one or more channels.  Everyone on the bridge receives the same audio.
 */
@ApiModel(description = "The merging of media from one or more channels.  Everyone on the bridge receives the same audio.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-12-07T21:43:27.583+02:00")
public class Bridge {
  @SerializedName("id")
  private String id = null;

  @SerializedName("technology")
  private String technology = null;

  @SerializedName("bridge_type")
  private String bridgeType = null;

  @SerializedName("bridge_class")
  private String bridgeClass = null;

  @SerializedName("creator")
  private String creator = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("channels")
  private List<String> channels = new ArrayList<>();

  @SerializedName("video_mode")
  private String videoMode = null;

  @SerializedName("video_source_id")
  private String videoSourceId = null;

  public Bridge id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier for this bridge
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique identifier for this bridge")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Bridge technology(String technology) {
    this.technology = technology;
    return this;
  }

   /**
   * Name of the current bridging technology
   * @return technology
  **/
  @ApiModelProperty(required = true, value = "Name of the current bridging technology")
  public String getTechnology() {
    return technology;
  }

  public void setTechnology(String technology) {
    this.technology = technology;
  }

  public Bridge bridgeType(String bridgeType) {
    this.bridgeType = bridgeType;
    return this;
  }

   /**
   * Type of bridge technology
   * @return bridgeType
  **/
  @ApiModelProperty(required = true, value = "Type of bridge technology")
  public String getBridgeType() {
    return bridgeType;
  }

  public void setBridgeType(String bridgeType) {
    this.bridgeType = bridgeType;
  }

  public Bridge bridgeClass(String bridgeClass) {
    this.bridgeClass = bridgeClass;
    return this;
  }

   /**
   * Bridging class
   * @return bridgeClass
  **/
  @ApiModelProperty(required = true, value = "Bridging class")
  public String getBridgeClass() {
    return bridgeClass;
  }

  public void setBridgeClass(String bridgeClass) {
    this.bridgeClass = bridgeClass;
  }

  public Bridge creator(String creator) {
    this.creator = creator;
    return this;
  }

   /**
   * Entity that created the bridge
   * @return creator
  **/
  @ApiModelProperty(required = true, value = "Entity that created the bridge")
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }

  public Bridge name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name the creator gave the bridge
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name the creator gave the bridge")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Bridge channels(List<String> channels) {
    this.channels = channels;
    return this;
  }

  public Bridge addChannelsItem(String channelsItem) {
    this.channels.add(channelsItem);
    return this;
  }

   /**
   * Ids of channels participating in this bridge
   * @return channels
  **/
  @ApiModelProperty(required = true, value = "Ids of channels participating in this bridge")
  public List<String> getChannels() {
    return channels;
  }

  public void setChannels(List<String> channels) {
    this.channels = channels;
  }

  public Bridge videoMode(String videoMode) {
    this.videoMode = videoMode;
    return this;
  }

   /**
   * The video mode the bridge is using. One of &#39;none&#39;, &#39;talker&#39;, or &#39;single&#39;.
   * @return videoMode
  **/
  @ApiModelProperty(value = "The video mode the bridge is using. One of 'none', 'talker', or 'single'.")
  public String getVideoMode() {
    return videoMode;
  }

  public void setVideoMode(String videoMode) {
    this.videoMode = videoMode;
  }

  public Bridge videoSourceId(String videoSourceId) {
    this.videoSourceId = videoSourceId;
    return this;
  }

   /**
   * The ID of the channel that is the source of video in this bridge, if one exists.
   * @return videoSourceId
  **/
  @ApiModelProperty(value = "The ID of the channel that is the source of video in this bridge, if one exists.")
  public String getVideoSourceId() {
    return videoSourceId;
  }

  public void setVideoSourceId(String videoSourceId) {
    this.videoSourceId = videoSourceId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Bridge bridge = (Bridge) o;
    return Objects.equals(this.id, bridge.id) &&
        Objects.equals(this.technology, bridge.technology) &&
        Objects.equals(this.bridgeType, bridge.bridgeType) &&
        Objects.equals(this.bridgeClass, bridge.bridgeClass) &&
        Objects.equals(this.creator, bridge.creator) &&
        Objects.equals(this.name, bridge.name) &&
        Objects.equals(this.channels, bridge.channels) &&
        Objects.equals(this.videoMode, bridge.videoMode) &&
        Objects.equals(this.videoSourceId, bridge.videoSourceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, technology, bridgeType, bridgeClass, creator, name, channels, videoMode, videoSourceId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Bridge {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    technology: ").append(toIndentedString(technology)).append("\n");
    sb.append("    bridgeType: ").append(toIndentedString(bridgeType)).append("\n");
    sb.append("    bridgeClass: ").append(toIndentedString(bridgeClass)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
    sb.append("    videoMode: ").append(toIndentedString(videoMode)).append("\n");
    sb.append("    videoSourceId: ").append(toIndentedString(videoSourceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

